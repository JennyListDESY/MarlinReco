###############################################
# cmake configuration file for @PROJECT_NAME@
# @author Jan Engels, DESY
###############################################

SET( @PROJECT_NAME@_FOUND FALSE )
MARK_AS_ADVANCED( @PROJECT_NAME@_FOUND )

# check if g2c/gfortran lib is available
# if somehow the library is in a different location you can tell cmake to
# also search in other locations for finding libraries.
# this can be done by setting a shell environment variable:
# $ export CMAKE_LIBRARY_PATH="/bla/bla:/foo/bar"
# or by calling:
# $ cmake -DCMAKE_LIBRARY_PATH="/bla/bla;/foo/bar" ...
# notice the path's separators! ( ':' for shell and ';' for cmake !! )
FIND_LIBRARY( FORTRAN_LIB NAMES @FORTRAN_LIBNAME@
    PATHS @FORTRAN_LIB_PATHS@;@CMAKE_INSTALL_PREFIX@/lib
    NO_DEFAULT_PATH )

# if previous find fails, try to find in system paths..
FIND_LIBRARY( FORTRAN_LIB NAMES @FORTRAN_LIBNAME@ )

IF( NOT FORTRAN_LIB )
    MESSAGE( STATUS "Check for @PROJECT_NAME@: failed to find @FORTRAN_LIBNAME@ library!!" )
ELSE( NOT FORTRAN_LIB )
    MESSAGE( STATUS "Check for lib@FORTRAN_LIBNAME@: ${FORTRAN_LIB}" )
    MARK_AS_ADVANCED( FORTRAN_LIB )
ENDIF( NOT FORTRAN_LIB )

# do not store find results in cache
SET( @PROJECT_NAME@_INCLUDE_DIR @PROJECT_NAME@_INCLUDE_DIR-NOTFOUND )

FIND_PATH( @PROJECT_NAME@_INCLUDE_DIR
    NAMES MarlinTrackFit.h
    PATHS @CMAKE_INSTALL_PREFIX@
    PATH_SUFFIXES include
    NO_DEFAULT_PATH
)
IF( NOT @PROJECT_NAME@_INCLUDE_DIR )
    MESSAGE( STATUS "Check for @PROJECT_NAME@: ${@PROJECT_NAME@_HOME}"
                    " -- failed to find @PROJECT_NAME@ include directory!!" )
ELSE( NOT @PROJECT_NAME@_INCLUDE_DIR )
    MARK_AS_ADVANCED( @PROJECT_NAME@_INCLUDE_DIR )
ENDIF( NOT @PROJECT_NAME@_INCLUDE_DIR )

# do not store find results in cache
SET( @PROJECT_NAME@_LIB @PROJECT_NAME@_LIB-NOTFOUND )

FIND_LIBRARY( @PROJECT_NAME@_LIB
    NAMES @PROJECT_NAME@
    PATHS @CMAKE_INSTALL_PREFIX@
    PATH_SUFFIXES lib
    NO_DEFAULT_PATH
)
IF( NOT @PROJECT_NAME@_LIB )
    MESSAGE( STATUS "Check for @PROJECT_NAME@: ${@PROJECT_NAME@_HOME}"
                    " -- failed to find @PROJECT_NAME@ library!!" )
ELSE( NOT @PROJECT_NAME@_LIB )
    MARK_AS_ADVANCED( @PROJECT_NAME@_LIB )
ENDIF( NOT @PROJECT_NAME@_LIB )


# set variables and display results
IF( @PROJECT_NAME@_INCLUDE_DIR AND @PROJECT_NAME@_LIB AND FORTRAN_LIB )
    SET( @PROJECT_NAME@_FOUND TRUE )
    SET( @PROJECT_NAME@_INCLUDE_DIRS ${@PROJECT_NAME@_INCLUDE_DIR} )
    SET( @PROJECT_NAME@_LIBRARY_DIRS "@CMAKE_INSTALL_PREFIX@/lib" )
    SET( @PROJECT_NAME@_LIBRARIES ${FORTRAN_LIB} ${@PROJECT_NAME@_LIB} )
    MARK_AS_ADVANCED( @PROJECT_NAME@_INCLUDE_DIRS @PROJECT_NAME@_LIBRARY_DIRS @PROJECT_NAME@_LIBRARIES )
    MESSAGE( STATUS "Check for @PROJECT_NAME@: ${@PROJECT_NAME@_HOME} -- works" )
ELSE( @PROJECT_NAME@_INCLUDE_DIR AND @PROJECT_NAME@_LIB AND FORTRAN_LIB )
    IF( @PROJECT_NAME@_FIND_REQUIRED )
        MESSAGE( FATAL_ERROR "Check for @PROJECT_NAME@: ${@PROJECT_NAME@_HOME} -- failed!!" )
    ELSE( @PROJECT_NAME@_FIND_REQUIRED )
        MESSAGE( STATUS "Check for @PROJECT_NAME@: ${@PROJECT_NAME@_HOME}"
                        " -- failed!! will skip this package..." )
    ENDIF( @PROJECT_NAME@_FIND_REQUIRED )
ENDIF( @PROJECT_NAME@_INCLUDE_DIR AND @PROJECT_NAME@_LIB AND FORTRAN_LIB )
